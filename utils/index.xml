<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UTILS on [ GOB D+I ]</title><link>https://datagovuc.github.io/utils/</link><description>Recent content in UTILS on [ GOB D+I ]</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://datagovuc.github.io/utils/index.xml" rel="self" type="application/rss+xml"/><item><title>Columns Types</title><link>https://datagovuc.github.io/utils/columntypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/columntypes/</guid><description>Data type de las columnas de una tabla # Para conocer los tipos, y el tamaño de una tabla particular, utilizamos la siguiente query:
SELECT [Name] = c.[name] , [Type] = CASE WHEN tp.[name] IN (&amp;#39;varchar&amp;#39;, &amp;#39;char&amp;#39;, &amp;#39;varbinary&amp;#39;) THEN tp.[name] + &amp;#39;(&amp;#39; + IIF(c.max_length = -1, &amp;#39;max&amp;#39;, CAST(c.max_length AS VARCHAR(25))) + &amp;#39;)&amp;#39; WHEN tp.[name] IN (&amp;#39;nvarchar&amp;#39;,&amp;#39;nchar&amp;#39;) THEN tp.[name] + &amp;#39;(&amp;#39; + IIF(c.max_length = -1, &amp;#39;max&amp;#39;, CAST(c.max_length / 2 AS VARCHAR(25))) + &amp;#39;)&amp;#39; WHEN tp.</description></item><item><title>Mapeo de FK</title><link>https://datagovuc.github.io/utils/mapeofk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/mapeofk/</guid><description>Mapero de FK # Usamos el siguiente system util para ver la información relativa a la tabla. Al final aparecen las FK:
USE &amp;lt;dataBaseName&amp;gt;; GO EXEC sp_help N&amp;#39;&amp;lt;dataBaseName.schemaName.tableName&amp;gt;&amp;#39;;</description></item><item><title>Resultado de query en JSON</title><link>https://datagovuc.github.io/utils/resultjson/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/resultjson/</guid><description>Queries que muestran el resultado en JSON # Resultado con top-level element: SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = &amp;#39;&amp;lt;tableName&amp;gt;&amp;#39; FOR JSON PATH, ROOT(&amp;#39;&amp;lt;topLevelElementeName&amp;gt;&amp;#39;) Resultado sin top-level element: SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = &amp;#39;&amp;lt;tableName&amp;gt;&amp;#39; FOR JSON PATH Resultado que entrega la misma estructura que la del SELECT statement: SELECT TABLE_SCHEMA , TABLE_NAME , COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = &amp;#39;&amp;lt;tableName&amp;gt;&amp;#39; FOR JSON AUTO</description></item><item><title>Row count</title><link>https://datagovuc.github.io/utils/rowcount/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/rowcount/</guid><description>Row count de las tablas de un esquema en particular # Para generar una tabla con el número de registros por tabla según esquema, ejecutamos la siguiente query:
WITH [RowCount] AS ( SELECT SCHEMA_NAME(t.schema_id) AS [schema_name] , t.name AS table_name , s.row_count FROM sys.tables t JOIN sys.dm_db_partition_stats s ON t.object_id = s.object_id AND t.type = &amp;#39;U&amp;#39; AND t.name NOT LIKE &amp;#39;%dss%&amp;#39; AND s.index_id IN (0, 1) ) SELECT * FROM [RowCount] WHERE [schema_name] = &amp;#39;&amp;lt;nombreEsquema&amp;gt;&amp;#39; AND row_count &amp;lt;&amp;gt; 0 ORDER BY [schema_name], row_count DESC</description></item><item><title>Tablas consumidas por una vista</title><link>https://datagovuc.github.io/utils/viewtableusage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/viewtableusage/</guid><description>Query para revisar las tablas que consume una vista # La siguente query muesta las tablas con las que se construye una vista:
SELECT * FROM INFORMATION_SCHEMA.VIEW_TABLE_USAGE WHERE VIEW_NAME = &amp;#39;&amp;lt;tableName&amp;gt;&amp;#39;</description></item></channel></rss>