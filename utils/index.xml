<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UTILS on [ GOB D+I ]</title><link>https://datagovuc.github.io/utils/</link><description>Recent content in UTILS on [ GOB D+I ]</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://datagovuc.github.io/utils/index.xml" rel="self" type="application/rss+xml"/><item><title>Columns Description</title><link>https://datagovuc.github.io/utils/columndescription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/columndescription/</guid><description>Descripción de la columna de una tabla # SELECTSCHEMA_NAME(so.schema_id)as[schema_name],so.nameastable_name,sc.nameascolumn_name,sep.valueascolumn_descriptionFROMsys.objectsassoLEFTJOINsys.columnsasscONso.object_id=sc.object_idLEFTJOINsys.extended_propertiesassepONso.object_id=sep.major_idANDsc.column_id=sep.minor_idWHEREso.name=&amp;lt;tableName&amp;gt;ANDsc.name=&amp;lt;columnName&amp;gt;Importante
Se creó la siguiente function para retornar la descripción de todas las tablas que coincidan con &amp;lt;tableName&amp;gt;:
SELECT * FROM UTILS.ColumnDescription(N'&amp;lt;tableName&amp;gt;')</description></item><item><title>Columns Types</title><link>https://datagovuc.github.io/utils/columntypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/columntypes/</guid><description>Data type de las columnas de una tabla # Para conocer los tipos, y el tamaño de una tabla particular, utilizamos la siguiente query:
SELECT[Name]=c.[name],[Type]=CASEWHENtp.[name]IN(&amp;#39;varchar&amp;#39;,&amp;#39;char&amp;#39;,&amp;#39;varbinary&amp;#39;)THENtp.[name]+&amp;#39;(&amp;#39;+IIF(c.max_length=-1,&amp;#39;max&amp;#39;,CAST(c.max_lengthASVARCHAR(25)))+&amp;#39;)&amp;#39;WHENtp.[name]IN(&amp;#39;nvarchar&amp;#39;,&amp;#39;nchar&amp;#39;)THENtp.[name]+&amp;#39;(&amp;#39;+IIF(c.max_length=-1,&amp;#39;max&amp;#39;,CAST(c.max_length/2ASVARCHAR(25)))+&amp;#39;)&amp;#39;WHENtp.[name]IN(&amp;#39;decimal&amp;#39;,&amp;#39;numeric&amp;#39;)THENtp.[name]+&amp;#39;(&amp;#39;+CAST(c.[precision]ASVARCHAR(25))+&amp;#39;, &amp;#39;+CAST(c.[scale]ASVARCHAR(25))+&amp;#39;)&amp;#39;WHENtp.[name]IN(&amp;#39;datetime2&amp;#39;)THENtp.[name]+&amp;#39;(&amp;#39;+CAST(c.[scale]ASVARCHAR(25))+&amp;#39;)&amp;#39;ELSEtp.[name]END,[RawType]=tp.[name],[MaxLength]=c.max_length,[Precision]=c.[precision],[Scale]=c.scaleFROMsys.tablestJOINsys.schemassONt.schema_id=s.schema_idJOINsys.columnscONt.object_id=c.object_idJOINsys.typestpONc.user_type_id=tp.user_type_idWHEREs.[name]=&amp;#39;&amp;lt;nombreEsquema&amp;gt;&amp;#39;ANDt.[name]=&amp;#39;&amp;lt;nombreTabla&amp;gt;&amp;#39;Donde
&amp;lt;nombreEsquema&amp;gt;: es el nombre del esquema &amp;lt;nombreTabla: es el nombre de la tabla Importante
Se creó el siguiente SP para conocer los column types:
EXECUTE UTILS.ColumnTypes N'&amp;lt;nombreEsquema&amp;gt;', N'&amp;lt;nombreTabla&amp;gt;'
Y la function:
SELECT * FROM UTILS.ColumnType (N'&amp;lt;nombreEsquema&amp;gt;', N'&amp;lt;nombreTabla&amp;gt;')</description></item><item><title>Mapeo de FK</title><link>https://datagovuc.github.io/utils/mapeofk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/mapeofk/</guid><description>Mapero de FK # Usamos el siguiente system util para ver la información relativa a la tabla. Al final aparecen las FK:</description></item><item><title>Resultado de query en JSON</title><link>https://datagovuc.github.io/utils/resultjson/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/resultjson/</guid><description>Queries que muestran el resultado en JSON # Resultado con top-level element: SELECT*FROMINFORMATION_SCHEMA.COLUMNSWHERETABLE_NAME=&amp;#39;&amp;lt;tableName&amp;gt;&amp;#39;FORJSONPATH,ROOT(&amp;#39;&amp;lt;topLevelElementeName&amp;gt;&amp;#39;)Resultado sin top-level element: SELECT*FROMINFORMATION_SCHEMA.COLUMNSWHERETABLE_NAME=&amp;#39;&amp;lt;tableName&amp;gt;&amp;#39;FORJSONPATHResultado que entrega la misma estructura que la del SELECT statement: SELECTTABLE_SCHEMA,TABLE_NAME,COLUMN_NAMEFROMINFORMATION_SCHEMA.</description></item><item><title>Row count</title><link>https://datagovuc.github.io/utils/rowcount/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/rowcount/</guid><description>Row count de las tablas de un esquema en particular # Para generar una tabla con el número de registros por tabla según esquema, ejecutamos la siguiente query:</description></item><item><title>Tablas consumidas por una vista</title><link>https://datagovuc.github.io/utils/viewtableusage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/viewtableusage/</guid><description>Tablas que consume una vista # Se creó la siguiente función en la BD Sandbox-Datagov_Prod para retornar las tablas que consume una vista con la fecha de modificación de cada tabla:</description></item></channel></rss>