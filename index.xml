<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on [ GOB D+I ]</title><link>https://datagovuc.github.io/</link><description>Recent content in Introduction on [ GOB D+I ]</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://datagovuc.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Accesos a BD</title><link>https://datagovuc.github.io/azure/give-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/azure/give-access/</guid><description>1. perfilamiento de accesos a en base de datos (Authorization) # 1.1 Acceso para un grupo de AAD # GRANTALTERONSCHEMA::[web]TO[g_magnet];GRANTSELECTONSCHEMA::[web]TO[g_magnet];GRANTCONTROLONSCHEMA::[web]TO[g_magnet];GRANTCREATEPROCEDUREto[g_magnet];1.2 Acceso para un usuario de AAD # GRANTALTERONSCHEMA::[web]TO[usuario1@uc.cl];GRANTSELECTONSCHEMA::[web]TO[usuario1@uc.cl];GRANTCONTROLONSCHEMA::[web]TO[usuario1@uc.cl];GRANTCREATEPROCEDUREto[usuario1@uc.cl];GRANTCREATEVIEWTO[usuario1@uc.cl];1.3 Acceso para un usuario con autenticación SQL-login # 1.4 Para comprobar accesos # EXECUTEASUSER=&amp;#39;usuario1@uc.</description></item><item><title>API SIPA</title><link>https://datagovuc.github.io/azure/apisipa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/azure/apisipa/</guid><description>HOW-TO # La API se llama a través de un HTTP trigger desplegado en la siguiente ruta:
https://apidwuc.azurewebsites.net/
Y cuyos endpoints para las consultas de acádemicos y unidades académicas son los siguientes:
Objeto de consulta Endpoint Descripción Unidades académicas /uas Devuelve el total de las unidades académicas de la universidad. Unidad académica /ua/&amp;lt;id unidad académica&amp;gt; Devuelve una unidad académica en según el ID de esta, donde &amp;lt;id unidad académica&amp;gt; es el número (ID) de la unidad académica.</description></item><item><title>Configuración DAC</title><link>https://datagovuc.github.io/sql/Modelo-DAC/Configuraci%C3%B3n-DAC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/sql/Modelo-DAC/Configuraci%C3%B3n-DAC/</guid><description>Discretionary access control (DAC)
Para poder revisar las politicas ya aplicadas dirigirse a la sección de monitoring XX:
Por otro lado para configurar un nuevo permiso o acceso se debe realizar lo siguiente:
1. Realizar inserciones tablas DM, GD, DC # listado de tablas y scripts de ejemplo de inserciones.
2. Ejecutar pipeline de modelo DAC (para aplicar politicas) # foto del adf
3. Verificar que se han aplicado accesos # Execute as user etc&amp;hellip;</description></item><item><title>Creación usuarios</title><link>https://datagovuc.github.io/azure/create-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/azure/create-user/</guid><description>Cómo crear usuarios y roles en Bases de Datos con AAD auth # Estructura estándar # Cómo ver qué usuarios tienen accesos. A qué objeto tiene acceso un usuario. Cómo añadir un usuario nuevo a un grupo en AAD existente. Cómo añadir al grupo AAD en SQL. 1. Crear usuario # 1.1 Autenticación: SQL login # CREATELOGINMaryUserWITHPASSWORD=&amp;#39;8YpFWHhrWUgTTbED&amp;#39;;CREATEUSERMaryUserFROMLOGINMaryUser;-- son 2 veces, uno en la master y otro en tu BD ALTERROLEdb_datareaderADDMEMBERMaryUser;-- en tu BD ALTERROLEdb_ddladminADDMEMBERMaryUser;ALTERROLEdb_datawriterADDMEMBERMaryUser;1.</description></item><item><title>HOW-TO</title><link>https://datagovuc.github.io/etl/mallas/mallamdm/malla-mdm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/mallas/mallamdm/malla-mdm/</guid><description>Malla MDM # La Malla MDM se encarga de consolidar la información que se tiene sobre entidades relevantes, que actualmente se encuentra almacenada en diversos sistemas de la Universidad. Para esto se unifican los registros correspondientes y se almacena el registro consolidado (golden record), junto a las llaves necesarias para acceder a los registros originales, en el schema MDIUC.
El pipeline del proceso de la malla MDM se encuentra en la ruta Fase 1/NORMALIZADO/MCP_MDIUC de la rama feature_mcp_mdiuc.</description></item><item><title>Indicadores</title><link>https://datagovuc.github.io/internados/admision/indicadores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/internados/admision/indicadores/</guid><description>Sesión de Convergencia: Indicadores Admisión # A continuación un análisis con los cruces para responder a los indicadores para ADMISIÓN.
ID Indicador Definición 1 Admisión especial, según vía de Equidad. Número de postulantes de carreras de pregrado, según vía de equidad, en un año-periodo de admisión. 1 Admisión especial, según vía de Equidad. Número de postulantes-seleccionados a carreras de pregrado, según vía de equidad en un año-periodo de admisión.</description></item><item><title>Indicadores</title><link>https://datagovuc.github.io/internados/banner/indicadores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/internados/banner/indicadores/</guid><description>Sesión de Convergencia: Indicadores Banner # A continuación un análisis con los cruces para responder a los indicadores para BANNER.
ID Indicador Definición 1 Promedio Ponderado Acumulado (PPA) Promedio ponderado de los alumnos a lo largo de su carrera, según la cantidad de créditos de cada curso 2 Estudiantes según información de admisión Cantidad de estudiantes en un periodo académico, según la dependencia educacional del colegio del cual egresó 2 Estudiantes según información de admisión Cantidad de estudiantes en un periodo académico, según su región o comuna de procedencia 3 Estudiantes según situación académica Cantidad de estudiantes según la situación académica que presentan en cada periodo académico 4 Retiro de cursos Cantidad de estudiantes, por periodo académico, que retiran cursos 4 Retiro de cursos Cantidad de cursos retirados, por periodo académico 5 Estudiantes según nivel del programa Cantidad de estudiantes vigentes, en cada periodo académico, según el nivel del programa en el que están inscritos 6 Deserción por carrera Tasa de alumnos que desertan por cohorte, en cada periódo académico 7 Estudiantes con cursos inscritos según nivel del curso Cantidad de estudiantes con cursos inscritos, según el nivel del curso 8 Carga académica Cantidad de cursos inscritos por los estudiantes según el o los programas en los que está adscrito, en un determinado periodo académico 8 Carga académica Cantidad de créditos inscritos por los estudiantes según el o los programas en los que está adscrito, en un determinado periodo académico 9 Estudiantes en carreras paralelas Cantidad de estudiantes que estudian 2 o más programas en forma simultánea 10 Estudiantes sin atraso curricular Cantidad de estudiantes que han aprobado todos sus créditos inscritos 10 Estudiantes sin atraso curricular Cantidad de estudiantes, por cohorte, según grado de avance curricular 11 Tasa de aprobación o reprobación Tasa de estudiantes total que aprueban o reprueban los cursos inscritos, respecto del total de estudiantes por curso, en un periodo académico 11 Tasa de aprobación o reprobación Tasa de estudiantes de 1er año que aprueban o reprueban los cursos inscritos, respecto del total de estudiantes por curso, en un periodo académico 12 Duración real de la carrera Promedio de la suma de semestres que tardan los estudiantes, por cohorte, en completar sus programas 13 Estudiantes que egresan o se titulan oportunamente Cantidad de estudiantes que finalizan sus programas académicos en hasta 2 semestres más que la duración oficial de la carrera 13 Estudiantes que egresan o se titulan oportunamente Tasa de estudiantes que finalizan sus programas académicos en hasta 2 semestres más que la duración oficial de la carrera, respecto del total de la cohorte 1.</description></item><item><title>Indicadores</title><link>https://datagovuc.github.io/internados/difusion/indicadores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/internados/difusion/indicadores/</guid><description>Sesión de Convergencia: Indicadores Difusión # A continuación un análisis con los cruces para responder a los indicadores para Difusión.
ID Indicador Definición 1 Participación en actividades del programa de difusión. Número de potenciales postulantes según grupo-dependencia del establecimiento de educación secundaria que participan en al menos una actividad del programa de Difusión. 1 Participación en actividades del programa de difusión.</description></item><item><title>Malla ADL</title><link>https://datagovuc.github.io/etl/mallas/malla-adl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/mallas/malla-adl/</guid><description>Definición general # El proceso de datalake consiste en traer distintos documentos, tablas y archivos y depositarlos en un contenedor del datalake. En particular se depositan en el contenedor raw en la siguiente ruta:
raw/nombre_origen/nombre_sistema/nombre_owner/nombre_tabla/año/mes/dia/nombre_tabla_año_mes_dia.csv Proceso de carga a datalake # 1. Verificar y cargar en MCP.MCP_CATALOGO # Si la tabla exista, se debe verificar que la columna FLG_ADL mantenga el valor 1.
Si la tabla no existe, se debe realizar una inserción a la tabla de catálogo de la siguiente forma:</description></item><item><title>Metadata</title><link>https://datagovuc.github.io/internados/banner/metadata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/internados/banner/metadata/</guid><description>Queries para obtener la data relativa de Banner Normalizado # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 EXECUTE AS USER = &amp;#39;psotou@uc.</description></item><item><title>Reportes Power BI</title><link>https://datagovuc.github.io/etl/monitoreo/links-pbi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/monitoreo/links-pbi/</guid><description>Definición general # Versión beta de monitores de los procesos ETL.
Reportes monitoreo # 1. Monitoreo Catálogo y consistencia de tablas # 2. Monitoreo Proceso ETL # 3. Monitoreo Proceso DAC # 4. Internado de aceleración #</description></item><item><title>Script ejemplo de uso DAC</title><link>https://datagovuc.github.io/sql/Modelo-DAC/Script_Ejemplo_uso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/sql/Modelo-DAC/Script_Ejemplo_uso/</guid><description>Discretionary access control (DAC)
1. Crear politicas # UPDATE DAC_SECURITY.DAC_USER_ENTITY_ACCESS SET flag_entity_access = 0 -- negar acceso a tabla UPDATE DAC_SECURITY.DAC_USER_ROW_LEVEL_SECURITY SET flag_rls_vigencia = 1 UPDATE DAC_SECURITY.DAC_USER_UNMASK SET flag_unmask = 1 UPDATE DAC_SECURITY.DAC_DATA_MASKING SET flag_dm_vigencia = 1 UPDATE DAC_SECURITY.DAC_DATA_CLASSIFICATION SET flag_dc_vigencia = 1/ 1. Borrar politicas # UPDATE DAC_SECURITY.DAC_USER_ENTITY_ACCESS SET flag_entity_access = 1 -- dar acceso a tabla UPDATE DAC_SECURITY.DAC_USER_ROW_LEVEL_SECURITY SET flag_rls_vigencia = 0 UPDATE DAC_SECURITY.DAC_USER_UNMASK SET flag_unmask = 0 UPDATE DAC_SECURITY.</description></item><item><title>Malla STG</title><link>https://datagovuc.github.io/etl/mallas/malla-stg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/mallas/malla-stg/</guid><description>Asumiendo que se realizó anteriormente el proceso de malla ADL, la tabla a actualizar ya se encuentra cargada en el MCP.MCP_CATALOGO, Con esto se deben realizar dos cosas:
### 1. Verificar/actualizar FlG Como se mencionó anteriormente en caso de que exista la tabla en el catalogo solo se debe actualizar flag.
Update [MCP].[MCP_CATALOGO] SET FLG_STG = 1 WHERE NOMBRE_TABLA = &amp;#39;TABLA_1&amp;#39; and NOMBRE_OWNER = &amp;#39;ESQUEMA_1&amp;#39; ### 2. Actualizar fecha de proceso</description></item><item><title>Prueba malla</title><link>https://datagovuc.github.io/etl/mallas/mallamdm/pruebamalla/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/mallas/mallamdm/pruebamalla/</guid><description>Pruebas de la malla # Para probar la malla existen dos entidades:
MDIUC.PERSON_TEST MDIUC.COUNTRY PERSON_TEST # Corresponde a una versión reducida de PERSON. Sus tablas de origen son:
NORMALIZADO_TEST.PERSON_BANNER NORMALIZADO_TEST.PERSON_PEOPLE_SOFT Cada tabla contiene el RUT, dígito verificador, apellido paterno y materno, y el nombre. Los registros de estas tablas de extrajeron de Banner y PeopleSoft respectivamente.
Cada tabla contiene 90 registros.
Existen 80 RUTs que aparecen en ambas tablas.</description></item><item><title>Malla SP</title><link>https://datagovuc.github.io/etl/mallas/malla-sp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/mallas/malla-sp/</guid><description>Proceso ETL para la transformación de tablas # La malla SP corresponde a un conjunto de ejecuciones de los procedimientos almacenados que suceden en la base de datos STAGE. Este proceso es parte del flujo completo del ETL en el pipeline de &amp;ldquo;malla general&amp;rdquo; el cual es ejecutado diariamente.
La malla SP en el contexto del pipeline:</description></item><item><title>Malla SBX</title><link>https://datagovuc.github.io/etl/mallas/malla-sbx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/mallas/malla-sbx/</guid><description>asdasd</description></item><item><title>Actualización de tablas</title><link>https://datagovuc.github.io/etl/actualizacion-carga/actualizacion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/actualizacion-carga/actualizacion/</guid><description>Actualización de tablas cuando el OWNER existe en MCP_CATALOGO # Para actualizar los datos de una tabla en particular en la BD Stage-Datagov_Prod, debemos aplicar los siguientes pasos:
Nota Queda pendiente poner este proceso en un proceso unificado, ya sea SP o cualquier otro artefacto. Paso 1 # Si, por ejemplo, queremos actualizar las tablas que consume una vista en la BD Sandbox-Datagov_Prod, corremos los siguiente:
SELECT TABLE_SCHEMA , TABLE_NAME FROM INFORMATION_SCHEMA.</description></item><item><title>Carga de tablas</title><link>https://datagovuc.github.io/etl/actualizacion-carga/cargatabla/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/etl/actualizacion-carga/cargatabla/</guid><description>Carga de tablas desde Stage a Sandbox # A continuación, se ilustra cómo cargar las tablas (cuando estas existen en el MCP_CATOLGO) ETNIA, INDICE_VULNER_ESCOLAR y POSTUL desde el esquema ADMISION de la BD Stage-Datagov_Prod hacia la BD Sandbox-Datagov_Prod. Ambas BDs viven en el server datagov-uc.
Paso 1 # Primero, vemos la última fecha de actualización de las tablas de interés para corroborar que no sea la del día en el que se hará la carga.</description></item><item><title>Columns Description</title><link>https://datagovuc.github.io/utils/columndescription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/columndescription/</guid><description>Descripción de la columna de una tabla # SELECT SCHEMA_NAME(so.schema_id) as [schema_name] , so.name as table_name , sc.name as column_name , sep.value as column_description FROM sys.objects as so LEFT JOIN sys.columns as sc ON so.object_id = sc.object_id LEFT JOIN sys.extended_properties as sep ON so.object_id = sep.major_id AND sc.column_id =sep.minor_id WHERE so.name = &amp;lt;tableName&amp;gt; AND sc.name = &amp;lt;columnName&amp;gt; Importante
Se creó la siguiente function para retornar la descripción de todas las tablas que coincidan con &amp;lt;tableName&amp;gt;:</description></item><item><title>Columns Types</title><link>https://datagovuc.github.io/utils/columntypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/columntypes/</guid><description>Data type de las columnas de una tabla # Para conocer los tipos, y el tamaño de una tabla particular, utilizamos la siguiente query:
SELECT [Name] = c.[name] , [Type] = CASE WHEN tp.[name] IN (&amp;#39;varchar&amp;#39;, &amp;#39;char&amp;#39;, &amp;#39;varbinary&amp;#39;) THEN tp.[name] + &amp;#39;(&amp;#39; + IIF(c.max_length = -1, &amp;#39;max&amp;#39;, CAST(c.max_length AS VARCHAR(25))) + &amp;#39;)&amp;#39; WHEN tp.[name] IN (&amp;#39;nvarchar&amp;#39;,&amp;#39;nchar&amp;#39;) THEN tp.[name] + &amp;#39;(&amp;#39; + IIF(c.max_length = -1, &amp;#39;max&amp;#39;, CAST(c.max_length / 2 AS VARCHAR(25))) + &amp;#39;)&amp;#39; WHEN tp.</description></item><item><title>Docencia y formación de personas</title><link>https://datagovuc.github.io/mdi/ficha-academica/docencia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/mdi/ficha-academica/docencia/</guid><description>Tablas y cruces propuestos # Cruce académicos y cursos dictados # WITH CURSODICTADO AS ( SELECT HPHC.COD_PERS AS COD_PERS , HPHC.RUT AS RUT , ACA.NOMBRE_COMPLETO AS NOMBRE_COMPLETO , HC.COD_HIST_CURSO AS COD_HIST_CURSO , HC.ANO_CURSO AS ANO_CURSO , HC.SECCION AS SECCION_CURSO , HC.SIGLA AS SIGLA_CURSO , CU.NOM_CURSO AS NOMBRE_CURSO FROM UC_BANNER.R_HIST_PERS_HIST_CURSO AS HPHC JOIN UC_BANNER.HIST_CURSO AS HC ON HPHC.COD_HIST_CURSO = HC.COD_HIST_CURSO JOIN UC_BANNER.CURSO AS CU ON HC.SIGLA = CU.SIGLA JOIN web.</description></item><item><title>Mapeo de FK</title><link>https://datagovuc.github.io/utils/mapeofk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/mapeofk/</guid><description>Mapero de FK # Usamos el siguiente system util para ver la información relativa a la tabla. Al final aparecen las FK:
USE &amp;lt;dataBaseName&amp;gt;; GO EXEC sp_help N&amp;#39;&amp;lt;dataBaseName.schemaName.tableName&amp;gt;&amp;#39;;</description></item><item><title>Resultado de query en JSON</title><link>https://datagovuc.github.io/utils/resultjson/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/resultjson/</guid><description>Queries que muestran el resultado en JSON # Resultado con top-level element: SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = &amp;#39;&amp;lt;tableName&amp;gt;&amp;#39; FOR JSON PATH, ROOT(&amp;#39;&amp;lt;topLevelElementeName&amp;gt;&amp;#39;) Resultado sin top-level element: SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = &amp;#39;&amp;lt;tableName&amp;gt;&amp;#39; FOR JSON PATH Resultado que entrega la misma estructura que la del SELECT statement: SELECT TABLE_SCHEMA , TABLE_NAME , COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = &amp;#39;&amp;lt;tableName&amp;gt;&amp;#39; FOR JSON AUTO</description></item><item><title>Row count</title><link>https://datagovuc.github.io/utils/rowcount/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/rowcount/</guid><description>Row count de las tablas de un esquema en particular # Para generar una tabla con el número de registros por tabla según esquema, ejecutamos la siguiente query:
WITH [RowCount] AS ( SELECT SCHEMA_NAME(t.schema_id) AS [schema_name] , t.name AS table_name , s.row_count FROM sys.tables t JOIN sys.dm_db_partition_stats s ON t.object_id = s.object_id AND t.type = &amp;#39;U&amp;#39; AND t.name NOT LIKE &amp;#39;%dss%&amp;#39; AND s.index_id IN (0, 1) ) SELECT * FROM [RowCount] WHERE [schema_name] = &amp;#39;&amp;lt;nombreEsquema&amp;gt;&amp;#39; AND row_count &amp;lt;&amp;gt; 0 ORDER BY [schema_name], row_count DESC</description></item><item><title>Tablas consumidas por una vista</title><link>https://datagovuc.github.io/utils/viewtableusage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://datagovuc.github.io/utils/viewtableusage/</guid><description>Tablas que consume una vista # Se creó la siguiente función en la BD Sandbox-Datagov_Prod para retornar las tablas que consume una vista con la fecha de modificación de cada tabla:
SELECT * FROM UTILS.ViewTablesUsage()</description></item></channel></rss>